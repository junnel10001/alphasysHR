name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest coverage

      - name: Lint with flake8
        run: flake8 .

      - name: Run tests with coverage
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          coverage run -m pytest
          coverage report --fail-under=85

      - name: Build Docker images
        run: |
          docker build -t alphasys-backend:latest -f Dockerfile .
          docker build -t alphasys-frontend:latest -f Dockerfile .

      - name: Push Docker images (optional)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag alphasys-backend:latest $DOCKERHUB_USERNAME/alphasys-backend:latest
          docker push $DOCKERHUB_USERNAME/alphasys-backend:latest
          docker tag alphasys-frontend:latest $DOCKERHUB_USERNAME/alphasys-frontend:latest
          docker push $DOCKERHUB_USERNAME/alphasys-frontend:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}